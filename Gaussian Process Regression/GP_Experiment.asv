%GP_Experiment: A script that creates a GP model from the data generated by
%an MDIPS mission. **In its current form, the input is the set of all
%positions throughout multiple time frames. I have doubts about this. It is
%also not local, but rather looks at a trajectory.**

%Recover simulation data
load("C:\Users\2700783t\OneDrive - University of Glasgow\InMotu\MATLAB\MDIPS Demo\RESULTS.mat")
clear Ax Fs r_s theta_s theta_se y mySTS2 mySTS

%% Create a suitable timeline 
% The time in seconds at each of the measurements made 
%Time boundaries: Set to observe for 1 minute
T_1 = 20000; % 0.5s
T_2 = T_1+60; % 0.5s
%Stepsize desired
dT = 1; %s 
%Number of steps
nT = (T_2-T_1/dT)+1; 
%Generate timeline
T = linspace(T_1,T_2,nT); 
%Cleanup
clear T_1 T_2 nT dT

%% Build a table with the data specific to the given times
%Storage array
D_a = zeros(length(mySwarm.network{1})*length(T),7); 
%Fill matrix 
for i_1 = 1:length(T)
    for i_2 = 1:length(mySwarm.network{1})
        D_a(((i_1-1)*length(mySwarm.network{1}))+i_2,1:3) = mySwarm.network{1}{i_2}.r(:,T(i_1))';
        D_a(((i_1-1)*length(mySwarm.network{1}))+i_2,4:6) = mySwarm.network{1}{i_2}.D_m(1:3);
        D_a(((i_1-1)*length(mySwarm.network{1}))+i_2,7) = T(i_1);
    end
end
%Tabulate
D_t = array2table(D_a,'VariableNames',{'r_x','r_y','r_z','M_x','M_y','M_z','t'}); 
clear D_a F G_mi i i_1 i_2 index n_orbits R

%% Use

%% Run fitgp from table to obtain GP model 
sigma0 = 0.2;% Signal Noise
kparams0 = [3.5, 6.2];%Nugget(Noise variance) and Theta(range or length scale)

X=[D_t.r_x(1:50),D_t.r_y(1:50),D_t.r_z(1:50)];

gprMdl = cell(1,3);

gprMdl{1} = fitrgp(X,D_t.M_x(1:50),'KernelFunction','squaredexponential','KernelParameters',kparams0,'Sigma',sigma0);
gprMdl{2} = fitrgp(X,D_t.M_y(1:50),'KernelFunction','squaredexponential','KernelParameters',kparams0,'Sigma',sigma0);
gprMdl{3} = fitrgp(X,D_t.M_z(1:50),'KernelFunction','squaredexponential','KernelParameters',kparams0,'Sigma',sigma0);


%Predict responses using the trained model 
ypred_Mx = resubPredict(gprMdl{1});
ypred_My = resubPredict(gprMdl{2});
ypred_Mz = resubPredict(gprMdl{3});

% %% Plot the true and predicted responses
% figure(1)
% scatter3(D_t.r_x,D_t.r_y,D_t.M_x,50,'r');
% hold on
% scatter3(D_t.r_x,D_t.r_y,ypred_Mx,70,'b','.'); 
% xlabel('X_{ECI}')
% ylabel('Y_{ECI}')
% zlabel('M_x')
% legend({'data','predictions'},'Location','Best'); 
% hold off

%% Plot the true and predicted responses of each magnetic field component, along each axis. 
plot(D_t.r_x,D_t.M_x,'b.');
hold on;
plot(D_t.r_x(1:50),ypred_Mx,'r','LineWidth',1.5);
xlabel('r_x');
ylabel('M_x');
legend('Data','GPR predictions');
hold off




